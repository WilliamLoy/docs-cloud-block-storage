<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MIGHT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MIGHT</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>

        <!ENTITY CHECK '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>

        <!ENTITY ARROW '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>
<book version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
    xml:id="cbs-getting-started">
    <?rax title.font.size="40px" subtitle.font.size="30px"?>
    <title>Rackspace Cloud Block Storage Getting Started Guide</title>
    <titleabbrev>Block Storage Getting Started Guide</titleabbrev>
    <info>
        <copyright>
            <year>2014</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1</releaseinfo>
        <productname>Rackspace Cloud Block Storage</productname>
        <pubdate/>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the doc build process.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers interested in developing
                applications using the Rackspace Cloud Block Storage Application Programming
                Interface (<abbrev>API</abbrev>). </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2014-06-15</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial publishing of this guide.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>Getting Started Guide</raxm:displayname>
            <raxm:product version="v1.0">cbs</raxm:product>
            <raxm:priority>10</raxm:priority>
        </raxm:metadata>
    </info>
    <chapter xml:id="Doc_change_history_d1e060">
        <title>Document change history</title>
        <para>This version of the guide replaces and obsoletes all earlier versions. The most recent
            changes are described in the following table:</para>
        <?rax revhistory?>
    </chapter>
    <chapter xml:id="Overview_d1e060">
        <title>Overview</title>
        <para> Rackspace Cloud Block Storage (CBS) is a block level storage solution that allows you
            to mount drives or volumes to your Next Generation Cloud Serversâ„¢. The primary use cases
            for Cloud Block Storage are to enable you to perform the following tasks:<itemizedlist>
                <listitem>
                    <para>Scale your storage independently from your compute resources.</para>
                </listitem>
                <listitem>
                    <para>Use high performance storage to serve database or I/O-intensive
                        applications.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>The following options are available for mounting drives or volumes to your Next
            Generation Cloud Server: <itemizedlist>
                <listitem>
                    <para>The standard performance option offers extra storage capacity with
                        mountable SATA drives. </para>
                </listitem>
                <listitem>
                    <para>The high performance option offers high speed solid state drives (SSDs)
                        for memory-intensive applications. </para>
                </listitem>
            </itemizedlist>
        </para>
        <note xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <title>Notes</title>
            <itemizedlist>
                <listitem>
                    <para>Cloud Block Storage is an add-on feature to Next Generation Cloud Servers.
                        You cannot attach Cloud Block Storage volumes to other instances, such as
                        first generation Cloud Servers.</para>
                </listitem>
                <listitem>
                    <para>Cloud Block Storage is multi-tenant rather than dedicated.</para>
                </listitem>
                <listitem>
                    <para>When volumes are destroyed, Rackspace keeps that disk space unavailable
                        until zeros have been written to the space to ensure that data is not
                        accessible by any other customers.</para>
                </listitem>
                <listitem>
                    <para>Cloud Block Storage allows you to create snapshots that you can save,
                        list, and restore.</para>
                </listitem>
            </itemizedlist>
        </note>
        <para>Cloud Block Storage is built on the OpenStack Cinder project. For more information
            about OpenStack Cinder, see <link
                xlink:href="http://docs.openstack.org/api/openstack-block-storage/1.0/content/"
                >http://docs.openstack.org/api/openstack-block-storage/1.0/content/</link>.</para>
        <para>Follow the steps in this <citetitle>Getting Started Guide</citetitle> to get started
            with Cloud Block Storage. This guide provides step-by-step instructions to enter the
            necessary URLs or commands to use the Cloud Block Storage API. You can find additional
            details about Cloud Block Storage in the <emphasis role="italic">Cloud Block Storage
                Developer Guide</emphasis> at <link xlink:href="http://docs.rackspace.com/"
                >http://docs.rackspace.com/</link>. </para>
        <para>For more details about the Cloud Block Storage service, see <link
                xlink:href="http://www.rackspace.com/cloud/block-storage/"
                >http://www.rackspace.com/cloud/block-storage/</link> and the Knowledge Center article <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/cloud-block-storage-overview"
                >Cloud Block Storage - Overview</link>. </para>
        <para>Rackspace welcomes feedback, comments, and bug reports at <link
                xlink:href="mailto:support@rackspacecloud.com"
            >support@rackspacecloud.com</link>.</para>
    </chapter>
    <chapter xml:id="Send_requests_to_API_d1e060">
        <title>Sending requests to the API</title>
        <para>You have several options for sending requests through an API including the following: </para>
        <itemizedlist>
            <listitem>
                <para>Developers and testers might prefer to use cURL, the command-line tool from
                        <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>. With
                    cURL, you can send HTTP requests and receive responses back from the command
                    line. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface, the REST client for Mozilla
                    Firefox works well for testing and trying out commands. See <link
                        xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                        >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can download and install RESTClient, a Java application used to test
                    RESTful web services, from <link
                        xlink:href="http://code.google.com/p/rest-client/"
                        >http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <para>This guide uses the API directly with cURL (<xref
                linkend="Using_the_API_directly_d1e060"/>). </para>
        <section xml:id="Prerequisites_for_examples_d1e060">
            <title>Prerequisites for running examples</title>
            <para>To run the examples in this guide, you must have the following prerequisites:
                    <itemizedlist spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                        <para>To sign up for a Rackspace Cloud account, go to the <link
                                xlink:href="https://cart.rackspace.com/cloud/"
                                xmlns:m="http://www.w3.org/the key 1998/Math/MathML">signup
                                page</link>.</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud user name and password, as specified during
                            registration.</para>
                    </listitem>
                </itemizedlist></para>
            <para>You also need to know your API key. To find your API key, use the following
                steps:</para>
            <para/>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Log in to the Cloud Control Panel (<link
                                xlink:href="https://mycloud.rackspace.com"
                                >https://mycloud.rackspace.com</link>).</para>
                    </listitem>
                    <listitem>
                        <para>On the upper-right side of the top navigation pane, click your
                            username.</para>
                    </listitem>
                    <listitem>
                        <para>From the menu, select <guilabel>Account Settings</guilabel>.</para>
                    </listitem>
                    <listitem>
                        <para>In the Login Details section of the Account Settings page, locate the
                                <guilabel>API Key</guilabel> field and click
                                <guibutton>Show</guibutton>.</para>
                    </listitem>
                    <listitem>
                        <para>Copy the value of the API Key and paste it into a text editor of your
                            choice.</para>
                    </listitem>
                    <listitem>
                        <para>Click <guibutton>Hide</guibutton> to hide the value of the API
                            Key.</para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section xml:id="Sending_requests_with_curl_d1e060">
            <title>Sending API requests by using cURL</title>
            <para>cURL is a command-line tool that you can use to interact with REST interfaces.
                cURL lets you to transmit and receive HTTP requests and responses from the command
                line or a shell script, which enables you to work with the API directly (without
                using one of the language-specific APIs). cURL is available for most UNIX
                system-based environments, Apple Mac OS XÂ®, and Microsoft WindowsÂ®. For more
                information about cURL, see <link xlink:href="http://curl.haxx.se/"
                    >http://curl.haxx.se/</link>. </para>
            <para>The following cURL command-line options are used in this guide to run the
                examples:</para>
            <table rules="all">
                <caption>cURL command-line options</caption>
                <col width="25%"/>
                <col width="75%"/>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>-d</code></td>
                        <td>Sends the specified data in a <command>POST</command> request to the
                            HTTP server.</td>
                    </tr>
                    <tr>
                        <td><code>-i</code></td>
                        <td>Includes the HTTP header in the output.</td>
                    </tr>
                    <tr>
                        <td><code>-H HEADER</code></td>
                        <td>Specifies an HTTP header in the request. You can specify any number of
                            extra headers. Precede each header with the -H option. </td>
                    </tr>
                    <tr>
                        <td><code>-s</code></td>
                        <td>Specifies silent or quiet mode. Does not show progress or error
                            messages. If your cURL command is not generating any output, try
                            replacing the <code>-s</code> option with <code>-i</code>. </td>
                    </tr>
                    <tr>
                        <td><code>-X</code></td>
                        <td>Specifies the request operation to use when communicating with the HTTP
                            server. The specified request is used instead of the default operation,
                            which is <command>GET</command>. For example, <code>-X PUT</code>
                            specifies to use the <command>PUT</command> operation.</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para>If you have the tools, you can run the cURL JSON request examples with the
                    following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                        request example> | python -m json.tool</command>.</para>
            </note>
        </section>
        <section xml:id="Copy_paste_curl_d1e060">
            <title>Copying and pasting cURL request examples into a terminal window</title>
            <para>To run the cURL request examples shown in this guide, perform the following
                actions:</para>
            <orderedlist>
                <listitem>
                    <para>Copy each example from the HTML version of this guide and paste it into an
                        ASCII text editor (for example, vi or TextEdit). You can click on the small
                        document icon to the right of each request example to select it.</para>
                </listitem>
                <listitem>
                    <para>Modify each example with your required account information and other
                        information, as detailed in this guide.</para>
                    <note>
                        <para>The carriage returns in the cURL request examples are escaped with a
                            backslash (\) character. The escape character allows continuation of the
                            command across multiple lines. However, do not include the escape
                            character in the JSON or XML request body within the cURL
                            command.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>After you are finished modifying the text for the cURL request example
                        with your information (for example, user name and API key), copy and paste
                        the text into your terminal window.</para>
                </listitem>
                <listitem>
                    <para>Press <keycombo>
                            <keycap>Enter</keycap>
                        </keycombo> to run the cURL command.</para>
                </listitem>
            </orderedlist>
            <para>Consider the following cURL authentication request JSON example, which is
                described in detail in <xref linkend="Gen_auth-token_d1e060"/>.</para>
            <example>
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {
          "username": "<emphasis role="bold">yourUserName</emphasis>",
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"}
    }
}' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python  -m  json.tool </screen>
            </example>
            <para>You can see that the lines that are part of the cURL command syntax have all been
                escaped with a backslash ('\') to indicate that the command continues on the next
                line:</para>
            <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> <emphasis role="bold">\</emphasis>
  
   
(... lines within the JSON portion of the message are not shown in this example)
(... the example shows only lines that are part of cURL syntax)     
     

   
 }' <emphasis role="bold">\</emphasis> 
-H 'Content-Type: application/json' <emphasis role="bold">\</emphasis> 
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri>  | python  -m  json.tool </screen>
            <para>However, the lines <emphasis role="italic">within</emphasis> the JSON portion of
                the message are not escaped with a backslash, to avoid issues with the JSON
                processing. </para>
            <screen language="bash">'{
    "auth":
    { 
       "RAX-KSKEY:apiKeyCredentials": 
       {   
          "username": "<emphasis role="bold">yourUserName</emphasis>",   
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"} 
    }  
}' \ 
</screen>
            <para>The final line of the JSON message is escaped, but the backslash lies outside the
                JSON message and continues the cURL command to the next line. </para>
            <tip>
                <para>If you have trouble copying and pasting the examples as described, try typing
                    the entire example on one long line, removing all the backslash
                    line-continuation characters.</para>
            </tip>
        </section>
    </chapter>
    <chapter xml:id="Service_access_endpoints_d1e060">
        <title>Service access endpoints</title>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">The Cloud Block Storage service is a
            regionalized service. The user of the service is responsible for appropriate
            replication, caching, and overall maintenance of Cloud Block Storage data across
            regional boundaries to other Cloud Block Storage servers.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You can find the available service
            access endpoints for Cloud Block Storage summarized in the table below.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <table rules="all">
                <caption>Cloud Block Storage regionalized service endpoints</caption>
                <thead>
                    <tr align="center">
                        <td colspan="2">Region</td>
                        <td colspan="5">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="2">Chicago (ORD)</td>
                        <td colspan="5"
                                ><code>https://ord.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">Dallas/Ft. Worth (DFW)</td>
                        <td colspan="5"
                                ><code>https://dfw.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                    <tr>
                        <td colspan="2">Northern Virginia (IAD)</td>
                        <td colspan="5"
                                ><code>https://iad.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">London (LON)</td>
                        <td colspan="5"
                                ><code>https://lon.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">Sydney (SYD)</td>
                        <td colspan="5"
                                ><code>https://syd.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                    <tr>
                        <td colspan="2">Hong Kong (HKG)</td>
                        <td colspan="5"
                                ><code>https://hkg.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Replace the sample account ID number,
                <parameter>1234</parameter>, with your actual account number returned as part of the
            authentication service response.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You will find the actual account number
            after the final '/' in the <code>publicURL</code> field returned by the authentication
            response (<xref linkend="authResponse-d1e"/>.</para>
    </chapter>
    <chapter xml:id="Using_the_API_directly_d1e060">
        <title>Using the API directly by using cURL</title>
        <para>The main purpose of this guide is to get you up and running quickly with Cloud Block
            Storage. To help you accomplish this goal, this chapter contains simple examples for
            authentication and some basic Cloud Block Storage requests that you will commonly use.
            Example requests are provided in cURL, followed by the response. </para>
        <para>For more information about all Cloud Block Storage operations, see the <emphasis
                role="italic">Cloud Block Storage Developer Guide</emphasis>.</para>
        <section xml:id="Gen_auth-token_d1e060">
            <title>Generating an authentication token</title>
            <para>Your first step must always be to generate an authentication token. You must then
                include the authentication token in each request in the <code>X-Auth-Token</code>
                header. </para>
            <para>For more details about authentication, see the <citetitle>Cloud Block Storage
                    Developer Guide</citetitle>.</para>
            <para>Remember to replace the placeholders in the following authentication request
                example with your information:<itemizedlist spacing="compact">
                    <listitem>
                        <para><emphasis role="bold">yourUserName</emphasis> &mdash;Your common
                            Rackspace Cloud user name, as supplied during registration.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">yourApiKey</emphasis> &mdash; Your API key. </para>
                    </listitem>
                </itemizedlist></para>
            <para>Notice that you authenticate by using the URL for the Cloud Identity service,
                    <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>, as shown in
                the following authentication request example. </para>
            <note>
                <para>For UK-based accounts, you might use
                        <code>'https://lon.identity.api.rackspacecloud.com/v2.0/tokens'</code>
                    instead.</para>
            </note>
            <para>The cURL request uses the <code>-d</code> switch to send the specified data in a
                    <command>POST</command> request to the HTTP server and the <code>-i</code>
                switch to send the HTTP response to terminal output.</para>
            <example>
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {
          "username": "<emphasis role="bold">yourUserName</emphasis>",
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"}
    }
}' \
-H 'Content-Type: application/json' \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python  -m  json.tool </screen>
            </example>
            <para>An HTTP status code of 200 (OK) in the response indicates that the authentication
                request completed successfully.</para>
            <para>In the authentication response, the authentication token <code>id</code> is
                returned with an <code>expires</code> attribute that specifies when the token
                expires. Tokens are valid for a finite duration, typically for 24 hours. Remember to
                supply your authentication token wherever you see the placeholder <emphasis
                    role="bold">yourAuthToken</emphasis> in the examples in this guide. </para>
            <para>You also see the service catalog in the authentication response. For example,
                    <code xmlns:wadl="http://wadl.dev.java.net/2009/02"
                    >https://dfw.blockstorage.api.rackspacecloud.com/v1/</code><parameter
                    xmlns:wadl="http://wadl.dev.java.net/2009/02">1234</parameter>/) is one of the
                    <code>publicURL</code> endpoints for Cloud Block Storage in the service catalog. </para>
            <para>Your actual account number is after the final slash (/) in the
                    <code>publicURL</code> field, such as <code>1234</code> in the preceding
                endpoint. You must specify <emphasis role="italic">your</emphasis> account number in
                the Cloud Block Storage API request, wherever you see the placeholder <emphasis
                    role="bold">yourAccountID</emphasis> specified in the examples in this
                guide.</para>
            <example xml:id="authResponse-d1e">
                <title>Authenticate response with partial service catalog showing cloudBlockStorage:
                    JSON</title>
                <programlisting language="json"><xi:include href="../../src/docbkx/samples/auth-20-gettingStartedGuide.json" parse="text"/></programlisting>
            </example>
            <para>After authentication, you can use cURL to perform <command>POST</command>,
                    <command>GET</command>, <command>PUT</command>, and <command>DELETE</command>
                requests for the Cloud Block Storage API.</para>
        </section>
        <section xml:id="Creating_a_volume_d1e060"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Creating a block storage volume</title>
            <para>Your first step in Cloud Block Storage is to create a volume. To do this, send a
                    <command>POST</command> request. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-i</code> option to include the HTTP headers in the output, the
                    <code>-X</code> option to specify the HTTP method to use (instead of using the
                default <command>GET</command>), and the <code>-d</code> option to send data in the
                request to the HTTP server.</para>
            <para>An HTTP status code of 200 (OK) in the response indicates that the volume was
                successfully created.</para>
            <note>
                <para>You use the <code>source_volid</code> parameter for volume cloning, which has
                    some limitations. You cannot create more than one clone per volume concurrently.
                    Snapshots and volume cloning use the same locking mechanism, so you cannot run a
                    snapshot and a clone of the same volume concurrently.</para>
            </note>
            <example>
                <title>cURL create a volume</title>
                <programlisting>
curl -i -X POST -d \
 '{ 
 "volume":{ 
 "display_name": "vol-001",    
 "size": 100
 }
  }' \
 -H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
 -H "Content-Type: application/json" \
 https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/volumes 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-2af6c97a-2397-4e52-a0d0-4fde64cfb88c
Content-Type: application/json
Content-Length: 399
Date: Tue, 03 Jun 2014 21:45:46 GMT
 {
  "volume": {
    "status": "available",
    "display_name": "vol-001",
    "attachments": [
      
    ],
    "availability_zone": "nova",
    "bootable": "false",
    "created_at": "2014-06-03T21:45:45.000000",
    "display_description": null,
    "volume_type": "SATA",
    "snapshot_id": null,
    "source_volid": null,
    "metadata": {
      "storage-node": "3d0a6f43-d1d9-4fea-bffa-8cf9fc7bf7e8"
    },
    "id": "a3df5c35-3218-436e-b706-c85edc3f149d",
    "size": 100
  }
} 
</programlisting>
            </example>
            <note>
                <para>You use the <code>os-volume_attachments</code> API call
                        (<code>/servers/{server_id}/os-volume_attachments</code>) to attach the new
                    volume to your Next Generation Cloud Server (with the specified
                        <code>{server_id}</code>). Refer to the <link
                        xlink:href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_preface.html"
                        >Next Generation Cloud Servers Developer Guide</link> for details about the
                    call. Once the volume is attached, the new volume appears as another device on
                    the Next Generation Cloud Server. The volume can then be partitioned, formatted,
                    and mounted for use on the system.</para>
            </note>
        </section>
        <section xml:id="Listing_volumes_d1e060">
            <title>Listing existing block storage volumes</title>
            <para>To list all of the block storage volumes that you have created in a single region,
                send a <command>GET</command> request.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output and the <code>-X</code> option to specify the HTTP method in the
                request.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request successfully completed.</para>
            <example>
                <title>cURL list volumes</title>
                <programlisting language="bash">
curl -i -X GET https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/volumes \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-7941b291-f226-459d-9a78-5d38660f3ae7
Content-Type: application/json
Content-Length: 1179
Date: Wed, 04 Jun 2014 16:52:15 GMT  

{ 
  "volumes": [
    {
      "status": "available",
      "display_name": "vol-001",
      "attachments": [
        
      ],
      "availability_zone": "nova",
      "bootable": "false",
      "created_at": " 2014-06-03T21:45:45.000000 ",
      "display_description": null,
      "volume_type": "SATA",
      "snapshot_id": null,
      "source_volid": null,
      "metadata": {
        "storage-node": " 3d0a6f43-d1d9-4fea-bffa-8cf9fc7bf7e8 "
      },
      "id": " a3df5c35-3218-436e-b706-c85edc3f149d ",
      "size": 100
    }
  ]
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Showing_a_volume_d1e060">
            <title>Showing volume details</title>
            <para>To show details about a specified volume, send a <command>GET</command> request
                that includes the volume ID.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output and the <code>-X</code> option to specify the HTTP method in the
                request.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request successfully completed.</para>
            <example>
                <title>cURL show volume details </title>
                <programlisting language="bash">
curl -i -X GET https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/volumes/<emphasis role="bold">yourVolumeID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-0ec1d1e0-c591-47d2-a8e7-9a8923e495b2
Content-Type: application/json
Content-Length: 554
Date: Wed, 04 Jun 2014 18:15:24 GMT

 {
  "volume": {
    "status": "available",
    "display_name": "vol-001",
    "attachments": [
      
    ],
    "availability_zone": "nova",
    "bootable": "false",
    "created_at": "2014-06-03T21:45:45.000000",
    "os-vol-tenant-attr:tenant_id": "<emphasis role="bold">yourAccountID</emphasis>",
    "display_description": null,
    "os-vol-host-attr:host": "lunr",
    "volume_type": "SATA",
    "snapshot_id": null,
    "source_volid": null,
    "os-vol-mig-status-attr:name_id": null,
    "metadata": {
      "storage-node": "3d0a6f43-d1d9-4fea-bffa-8cf9fc7bf7e8"
    },
    "id": "a3df5c35-3218-436e-b706-c85edc3f149d",
    "os-vol-mig-status-attr:migstat": null,
    "size": 100
  }
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Updating_a_volume_d1e060">
            <title>Updating a volume</title>
            <para>To modify a volumeâ€™s name or description or both, send a <command>PUT</command>
                request that includes the volume ID.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output, the <code>-X</code> option to specify the HTTP method to use (instead of
                using the default ), and the <code>-d</code> option to send data in the request to
                the HTTP server.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request successfully completed.</para>
            <example>
                <title>cURL update volume</title>
                <programlisting language="bash">
curl -i -X PUT -d \
  '{
   "volume":{
       "display_name":"newName",
       "display_description":"newDescription"
       }
   }'\
   -H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
   -H "Content-Type: application/json" \
   https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/volumes/<emphasis role="bold">yourVolumeID</emphasis>
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-8a131657-46a3-435b-bee4-b612c79c8c09
Content-Type: application/json
Content-Length: 411
Date: Wed, 04 Jun 2014 18:29:43 GMT

{ 
  "volume": {
    "status": "available",
    "display_name": "newName",
    "attachments": [
      
    ],
    "availability_zone": "nova",
    "bootable": "false",
    "created_at": "2014-06-03T21:45:45.000000",
    "display_description": "newDescription",
    "volume_type": "SATA",
    "snapshot_id": null,
    "source_volid": null,
    "metadata": {
      "storage-node": "3d0a6f43-d1d9-4fea-bffa-8cf9fc7bf7e8"
    },
    "id": "a3df5c35-3218-436e-b706-c85edc3f149d",
    "size": 100
  }
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Deleting_a_volume_d1e060">
            <title>Deleting a volume</title>
            <para>To delete a volume when it is no longer in use and the data that it contains is
                not needed, send a <command>DELETE</command> request that includes the volume
                ID.</para>
            <note>
                <para>Deleting a volume deletes all the data within it. You cannot recover the data
                    unless it is backed up before the volume is deleted.</para>
            </note>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output and the <code>-X</code> option to specify the HTTP method to use (instead
                of using the default).</para>
            <para>An HTTP status code of 202 (Accepted) in the response indicates that the delete
                request has been accepted for processing and the volume will be deleted.</para>
            <example>
                <title>cURL delete volume</title>
                <programlisting language="bash">
curl -i -X DELETE https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/volumes/<emphasis role="bold">yourVolumeID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" 
</programlisting>
                <programlisting>
HTTP/1.1 202 Accepted
Content-Type: text/html; charset=UTF-8
Content-Length: 0
Date: Wed, 04 Jun 2014 19:17:35 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="Creating_a_snapshot_d1e060">
            <title>Creating a snapshot</title>
            <para>A snapshot is a point-in-time copy of the data that a volume contains. You must
                flush all writes to the volume before you create a snapshot. To do so, either
                unmount any file systems on the volume or detach the volume. Snapshots are
                incremental, so each time that you create a snapshot, the incremental changes for
                the new snapshot are appended to the previous snapshot, which is still available.
                Note that you can create a volume from the snapshot if desired.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">To create a snapshot of a
                block storage volume, send a <command>POST</command> request. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output, the <code>-X</code> option to specify the HTTP method to use (instead of
                using the default <command>GET</command>), and the <code>-d</code> option to send
                data in the request to the HTTP server.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) indicates that the request was accepted and <code>"status": "creating"</code>
                indicates that the snapshot is in progress.</para>
            <example xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
                <title>cURL create a snapshot</title>
                <programlisting>
curl -i -X POST -d \
  '{
  "snapshot": {
      "display_name": "snap-001",
      "display_description": "Daily Backup",
      "volume_id": "<emphasis role="bold">yourVolumeID</emphasis>"
    }
  }'\
  -H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
  -H "Content-Type: application/json" \
 https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/snapshots 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-99d94a3a-1086-4c19-99b4-65d05e2e02f1
Content-Type: application/json
Content-Length: 275
Date: Wed, 04 Jun 2014 20:16:19 GMT

{
  "snapshot": {
    "status": "creating",
    "display_name": "snap-001",
    "created_at": "2014-06-04T20:16:17.000000",
    "display_description": "Daily Backup",
    "volume_id": "c849a193-5275-4527-9e5a-69b2a05933aa",
    "metadata": {
      
    },
    "id": "a6211a94-937f-4770-8dae-1813cb643213",
    "size": 100
  }
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Listing_snapshots_d1e060"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Listing snapshots</title>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">To list all of the snapshots that you
                have created in a single region, send a <command>GET</command> request.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-i</code> option to include the HTTP headers in the output and the
                    <code>-X</code> option to specify the HTTP method in the request.</para>
            <para>An HTTP status code of 200 (OK) in the response indicates that the request
                successfully completed.</para>
            <example xmlns:m="http://www.w3.org/1998/Math/MathML">
                <title>cURL list snapshots</title>
                <programlisting language="bash">
curl -i -X GET https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/snapshots \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-1a938da7-cf74-4ac6-a72f-4c927ae23605
Content-Type: application/json
Content-Length: 541
Date: Wed, 04 Jun 2014 20:28:01 GMT 

 {
  "snapshots": [
    {
      "status": "creating",
      "display_name": "snap-001",
      "created_at": "2014-06-04T20:16:17.000000",
      "display_description": "Daily Backup",
      "volume_id": "c849a193-5275-4527-9e5a-69b2a05933aa",
      "metadata": {
        
      },
      "id": "a6211a94-937f-4770-8dae-1813cb643213",
      "size": 100
    },
    {
      "status": "available",
      "display_name": "snap-002",
      "created_at": "2014-06-04T20:13:34.000000",
      "display_description": "Weekly Backup",
      "volume_id": "1a036384-99b2-4fed-ac05-31f964d6925d",
      "metadata": {
        
      },
      "id": "ca320eb7-b371-4dbe-b2e9-2543c952f507",
      "size": 100
    }
  ]
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Showing_snapshot_details_d1e060">
            <title>Showing snapshot details</title>
            <para>To show details about a specified volume, send a <command>GET</command> request
                that includes the volume ID.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output and the <code>-X</code> option to specify the HTTP method in the
                request.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request successfully completed.</para>
            <note>
                <para><code>os-extended-snapshot-attributes:progress</code> in the response body
                    shows snapshot progress.</para>
            </note>
            <example>
                <title>cURL show snapshot details </title>
                <programlisting language="bash">
curl -i -X GET https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/snapshots/<emphasis role="bold">yourSnapshotID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-7314746b-0670-4160-b6a7-388cafbfd082
Content-Type: application/json
Content-Length: 383
Date: Wed, 04 Jun 2014 20:47:48 GMT

{
  "snapshot": {
    "status": "available",
    "display_name": "snap-002",
    "created_at": "2014-06-04T20:13:34.000000",
    "display_description": "Weekly Backup",
    "os-extended-snapshot-attributes:progress": "100%",
    "volume_id": "1a036384-99b2-4fed-ac05-31f964d6925d",
    "os-extended-snapshot-attributes:project_id": "<emphasis role="bold">yourAccountID</emphasis>",
    "metadata": {
      
    },
    "id": "ca320eb7-b371-4dbe-b2e9-2543c952f507",
    "size": 100
  }
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Updating_a_snapshot_d1e060">
            <title>Updating a snapshot</title>
            <para>To modify a snapshotâ€™s name or description or both, send a <command>PUT</command>
                request that includes the snapshot ID.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-i</code> option to include the HTTP headers in
                the output, the <code>-X</code> option to specify the HTTP method to use (instead of
                using the default ), and the <code>-d</code> option to send data in the request to
                the HTTP server.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the request successfully completed.</para>
            <example>
                <title>cURL update a snapshot</title>
                <programlisting language="bash">
curl -i -X PUT -d \
  '{
   "snapshot":{
       "display_name":"newSnapshotName",
       "display_description":"newSnapshotDescription"
       }
   }' \
   -H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
   -H "Content-Type: application/json" \
   https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/snapshots/<emphasis role="bold">yourSnapshotID</emphasis>
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
X-Compute-Request-Id: req-8a131657-46a3-435b-bee4-b612c79c8c09
Content-Length: 358
Content-Type: text/html; charset=UTF-8
Date: Wed, 04 Jun 2014 20:59:12 GMT

{ 
  "snapshot": {
    "created_at" : "2014-06-04T20:13:34.000000", 
    "status": "available",
    "display_name": "newSnapshotName",
    "display_description": "newSnapshotDescription",
    "id": "a3df5c35-3218-436e-b706-c85edc3f149d",
    "size": 100,
    "volume_id" : "1a036384-99b2-4fed-ac05-31f964d6925d" 
  }
} 
</programlisting>
            </example>
        </section>
        <section xml:id="Deleting_a_snapshot_d1e060"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Deleting a snapshot</title>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">To delete a snapshot, send a
                    <command>DELETE</command> request that includes the snapshot ID.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-i</code> option to include the HTTP headers in the output and the
                    <code>-X</code> option to specify the HTTP method to use (instead of using the
                default).</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">An HTTP status code of 202 (Accepted)
                in the response indicates that the delete request has been accepted for processing
                and the volume will be deleted.</para>
            <example xmlns:m="http://www.w3.org/1998/Math/MathML">
                <title>cURL delete a snapshot</title>
                <programlisting language="bash">
curl -i -X DELETE https://dfw.blockstorage.api.rackspacecloud.com/v1/<emphasis role="bold">yourAccountID</emphasis>/snapshots/<emphasis role="bold">yourSnapshotID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: application/json" 
</programlisting>
                <programlisting>
HTTP/1.1 202 Accepted
Content-Type: text/html; charset=UTF-8
Content-Length: 0
Date: Wed, 04 Jun 2014 21:09:15 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="Other_cURL_Commands_d1e3222"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Other cURL Commands</title>
            <para>You can issue any of the REST methods defined for Cloud Block Storage with the
                cURL utility. </para>
            <para>Note that generally each time <code>curl</code> is invoked to perform an
                operation, a separate TCP/IP and SSL connection is created and thrown away. The
                language APIs, in contrast, are designed to re-use connections between operations
                and therefore provide much better performance. We recommend that you use one of the
                language APIs in your production applications and limit cURL to quick-and-easy
                testing and troubleshooting.</para>
        </section>
    </chapter>
    <chapter xml:id="Additional_Resources_d1e436">
        <title>Additional resources</title>
        <para>For information about all Cloud Block Storage API operations, see the <citetitle>Cloud
                Block Storage Developer Guide</citetitle> at <link
                xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>. All you
            need to get started with the Cloud Block Storage API is in this getting started guide
            and the developer guide. For additional information about Cloud Block Storage, see <link
                xlink:href="http://www.rackspace.com/knowledge_center/product-page/cloud-block-storage">the
                Knowledge Center</link>.</para>
        <para>The official support channels (phone, chat, email, forums, and knowledge base
            articles) for Cloud Block Storage are available through the Rackspace Cloud web site at <link
                xlink:href="http://www.rackspace.com/cloud/block-storage/"
                >http://www.rackspace.com/cloud/block-storage/</link>. </para>
        <para> The system status page at <link
                xlink:href="http://status.rackspacecloud.com/cloudblockstorage/"
                >http://status.rackspacecloud.com/cloudblockstorage/</link> can be reviewed if you believe
            the Cloud Block Storage system is not functioning to your expectations. This page is updated to
            reflect up-to-date information about the systemâ€™s current health and status. </para>
        <para>Interested users can also follow updates/announcements via twitter at <link
                xlink:href="http://www.twitter.com/rackspace"
                >http://www.twitter.com/rackspace</link>. </para>
        <para>Visit the <link
                xlink:href="http://feedback.rackspacecloud.com/forums/71021-product-feedback/"
                >Product Feedback Forum</link> and tell us what you think about Cloud Block
            Storage.</para>
        <para> Developers are also encouraged to join some of the members of the Cloud Block Storage
            team at external.irc.rackspace.com on the #cbs channel. This is not an official Cloud
            Block Storage support channel but should rather be viewed as a community meeting place
            to share ideas and discuss Cloud Block Storage. </para>
        <para>This API uses standard HTTP 1.1 response codes as documented at <link
                xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                >www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>. </para>
    </chapter>
</book>
