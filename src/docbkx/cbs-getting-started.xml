<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MIGHT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MIGHT</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>

        <!ENTITY CHECK '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>

        <!ENTITY ARROW '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>
<book version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
    xml:id="cbs-getting-started">
    <?rax title.font.size="40px" subtitle.font.size="30px"?>
    <title>Rackspace Cloud Block Storage Getting Started Guide</title>
    <?rax status.bar.text.font.size="40px"
          status.bar.text=""?>
    <titleabbrev>Rackspace Cloud Block Storage Getting Started Guide</titleabbrev>
    <info>
        <copyright>
            <year>2014</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1</releaseinfo>
        <productname>Rackspace Cloud Block Storage</productname>
        <pubdate>2014-04-30</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the doc build process.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers interested in developing
                applications using the Rackspace Cloud Block Storage Application Programming
                Interface (<abbrev>API</abbrev>). </para>
        </abstract>
        <revhistory>
            <revision>
                <date>2014-04-30</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial publishing of this guide.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
        </revhistory>
        <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
            <raxm:displayname>Getting Started Guide</raxm:displayname>
            <raxm:product version="v1">cbs</raxm:product>
            <raxm:priority>10</raxm:priority>
        </raxm:metadata>
    </info>
    <chapter xml:id="Doc_Change_History">
        <title>Document change history</title>
        <para>This version of the guide replaces and obsoletes all earlier versions. The most recent
            changes are described in the following table:</para>
        <?rax revhistory?>
    </chapter>
    <chapter xml:id="Overview-d1e01">
        <title>Overview</title>
        <para> Rackspace Cloud Block Storage (CBS) is a block level storage solution that allows you
            to mount drives or volumes to your Next Generation Cloud Serversâ„¢. The primary use cases
            for Cloud Block Storage are to enable you to do the following tasks:<itemizedlist>
                <listitem>
                    <para>Scale your storage independently from your compute resources.</para>
                </listitem>
                <listitem>
                    <para>Use high performance storage to serve database or I/O-intensive
                        applications.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>The following options allow you to mount drives or volumes to your Next Generation
            Cloud Server: <itemizedlist>
                <listitem>
                    <para>The standard performance option offers extra storage capacity with
                        mountable SATA drives </para>
                </listitem>
                <listitem>
                    <para>The high performance option offers high speed solid state drives (SSDs)
                        for memory-intensive applications </para>
                </listitem>
            </itemizedlist>
        </para>
        <note xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <title>Notes</title>
            <itemizedlist>
                <listitem>
                    <para>Cloud Block Storage is an add-on feature to Next Generation Cloud Servers.
                        Customers may not attach Cloud Block Storage volumes to other instances,
                        like first generation Cloud Servers.</para>
                </listitem>
                <listitem>
                    <para>Cloud Block Storage is multi-tenant rather than dedicated.</para>
                </listitem>
                <listitem>
                    <para>When volumes are destroyed, Rackspace keeps that disk space unavailable
                        until zeros have been written to the space to ensure that data is not
                        accessible by any other customers.</para>
                </listitem>
                <listitem>
                    <para>Cloud Block Storage allows you to create snapshots that you can save,
                        list, and restore.</para>
                </listitem>
            </itemizedlist>
        </note>
        <para>Cloud Block Storage is built on the OpenStack Cinder project. For more information,
            see <link
                xlink:href="http://docs.openstack.org/api/openstack-block-storage/1.0/content/"
                >http://docs.openstack.org/api/openstack-block-storage/1.0/content/</link>.</para>
        <para>Follow the steps in this <citetitle>Getting Started Guide</citetitle> to get started
            with Cloud Block Storage. This guide provides step-by-step instructions to enter the
            necessary URLs or commands to use the Cloud Block Storage API. You can find additional
            details about Cloud Block Storage in the <emphasis role="italic">Cloud Block Storage
                Developer Guide</emphasis> at <link xlink:href="http://docs.rackspace.com/"
                >http://docs.rackspace.com/</link>. </para>
        <para>For more details about the Cloud Block Storage service, see <link
                xlink:href="http://www.rackspace.com/cloud/block-storage/"
                >http://www.rackspace.com/cloud/block-storage/</link> and the Knowledge Center article <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/cloud-block-storage-overview"
                >Cloud Block Storage - Overview</link>. </para>
        <para>Rackspace welcomes feedback, comments, and bug reports at <link
                xlink:href="mailto:support@rackspacecloud.com"
            >support@rackspacecloud.com</link>.</para>
    </chapter>
    <chapter xml:id="Send-Requests-To-API-d1e101">
        <title>Sending requests to the API</title>
        <para>You have several options for sending requests through an API including the following: </para>
        <itemizedlist>
            <listitem>
                <para>Developers and testers might prefer to use cURL, the command-line tool from
                        <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>. With
                    cURL, you can send HTTP requests and receive responses back from the command
                    line. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface, the REST client for Mozilla
                    Firefox works well for testing and trying out commands. See <link
                        xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                        >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can download and install RESTClient, a Java application used to test
                    RESTful web services, from <link
                        xlink:href="http://code.google.com/p/rest-client/"
                        >http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <para>This guide uses the API directly with cURL (<xref linkend="Using_the_API_Directly"/>). </para>
        <section xml:id="Prerequisites_Examples">
            <title>Prerequisites for running examples</title>
            <para>To run the examples in this guide, you must have the following prerequisites:
                    <itemizedlist spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                        <para>To sign up for a Rackspace Cloud account, go to the <link
                                xlink:href="https://cart.rackspace.com/cloud/"
                                xmlns:m="http://www.w3.org/the key 1998/Math/MathML">signup
                                page</link>.</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud user name and password, as specified during
                            registration</para>
                    </listitem>
                </itemizedlist></para>
            <para>You also need to know your API key. To find your API key, use the following
                steps:</para>
            <para>
                <itemizedlist spacing="compact">
                    <listitem>
                        <para><emphasis role="bold">To find your API key:</emphasis>
                        </para>
                        <orderedlist>
                            <listitem>
                                <para>Log in to the Cloud Control Panel (<link
                                        xlink:href="https://mycloud.rackspace.com"
                                        >https://mycloud.rackspace.com</link>).</para>
                            </listitem>
                            <listitem>
                                <para>On the upper-right side of the top navigation pane, click your
                                    username.</para>
                            </listitem>
                            <listitem>
                                <para>From the menu, select <guilabel>Account
                                    Settings</guilabel>.</para>
                            </listitem>
                            <listitem>
                                <para>In the Login Details section of the Account Settings page,
                                    locate the <guilabel>API Key</guilabel> field and click
                                        <guibutton>Show</guibutton>.</para>
                            </listitem>
                            <listitem>
                                <para>Copy the value of the API Key and paste it into a text editor
                                    of your choice.</para>
                            </listitem>
                            <listitem>
                                <para>Click <guibutton>Hide</guibutton> to hide the value of the API
                                    Key.</para>
                            </listitem>
                        </orderedlist>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="Using-Curl-d1e101">
            <title>Sending API requests by using cURL</title>
            <para>cURL is a command-line tool that you can use to interact with REST interfaces.
                cURL lets you to transmit and receive HTTP requests and responses from the command
                line or a shell script, which enables you to work with the API directly (without
                using one of the language-specific APIs). cURL is available for most UNIX
                system-based environments, Apple Mac OS XÂ®, and Microsoft WindowsÂ®. For more
                information about cURL, see <link xlink:href="http://curl.haxx.se/"
                    >http://curl.haxx.se/</link>. </para>
            <para>The following cURL command-line options are used in this guide to run the
                examples:</para>
            <table rules="all">
                <caption>cURL command-line options</caption>
                <col width="25%"/>
                <col width="75%"/>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>-d</code></td>
                        <td>Sends the specified data in a <command>POST</command> request to the
                            HTTP server.</td>
                    </tr>
                    <tr>
                        <td><code>-i</code></td>
                        <td>Includes the HTTP header in the output.</td>
                    </tr>
                    <tr>
                        <td><code>-H HEADER</code></td>
                        <td>Specifies an HTTP header in the request. You can specify any number of
                            extra headers. Precede each header with the -H option. </td>
                    </tr>
                    <tr>
                        <td><code>-s</code></td>
                        <td>Specifies silent or quiet mode. Does not show progress or error
                            messages. If your cURL command is not generating any output, try
                            replacing the <code>-s</code> option with <code>-i</code>. </td>
                    </tr>
                    <tr>
                        <td><code>-X</code></td>
                        <td>Specifies the request operation to use when communicating with the HTTP
                            server. The specified request is used instead of the default operation,
                            which is <command>GET</command>. For example, <code>-X PUT</code>
                            specifies to use the <command>PUT</command> operation.</td>
                    </tr>
                </tbody>
            </table>
            <note>
                <para>If you have the tools, you can run the cURL JSON request examples with the
                    following option to format the output from cURL: <?sbr?><command>&lt;cURL JSON
                        request example> | python -m json.tool</command>.</para>
            </note>
        </section>
        <section xml:id="Copy-Past-Curl-d1e101">
            <title>Copying and pasting cURL request examples into a terminal window</title>
            <para>To run the cURL request examples shown in this guide, perform the following
                actions:</para>
            <orderedlist>
                <listitem>
                    <para>Copy each example from the HTML version of this guide and paste it into an
                        ASCII text editor (for example, vi or TextEdit). You can click on the small
                        document icon to the right of each request example to select it.</para>
                </listitem>
                <listitem>
                    <para>Modify each example with your required account information and other
                        information, as detailed in this guide.</para>
                    <note>
                        <para>The carriage returns in the cURL request examples are escaped with a
                            backslash (\) character. The escape character allows continuation of the
                            command across multiple lines. However, do not include the escape
                            character in the JSON or XML request body within the cURL
                            command.</para>
                    </note>
                </listitem>
                <listitem>
                    <para>After you are finished modifying the text for the cURL request example
                        with your information (for example, user name and API key), copy and paste
                        the text into your terminal window.</para>
                </listitem>
                <listitem>
                    <para>Press <keycombo>
                            <keycap>Enter</keycap>
                        </keycombo> to run the cURL command.</para>
                </listitem>
            </orderedlist>
            <para>Consider the following cURL authentication request JSON example, which is
                described in detail in <xref linkend="Gen-Auth-Token"/>.</para>
            <example>
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {
          "username": "<emphasis role="bold">yourUserName</emphasis>",
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"}
    }
}' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python  -m  json.tool </screen>
            </example>
            <para>You can see that the lines that are part of the cURL command syntax have all been
                escaped with a backslash ('\') to indicate that the command continues on the next
                line:</para>
            <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> <emphasis role="bold">\</emphasis>
  
   
(... lines within the JSON portion of the message are not shown in this example)
(... the example shows only lines that are part of cURL syntax)     
     

   
 }' <emphasis role="bold">\</emphasis> 
-H 'Content-Type: application/json' <emphasis role="bold">\</emphasis> 
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri>  | python  -m  json.tool </screen>
            <para>However, the lines <emphasis role="italic">within</emphasis> the JSON portion of
                the message are not escaped with a backslash, to avoid issues with the JSON
                processing. </para>
            <screen language="bash">'{
    "auth":
    { 
       "RAX-KSKEY:apiKeyCredentials": 
       {   
          "username": "<emphasis role="bold">yourUserName</emphasis>",   
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"} 
    }  
}' \ 
</screen>
            <para>The final line of the JSON message is escaped, but the backslash lies outside the
                JSON message and continues the cURL command to the next line. </para>
            <tip>
                <para>If you have trouble copying and pasting the examples as described, try typing
                    the entire example on one long line, removing all the backslash
                    line-continuation characters.</para>
            </tip>
        </section>
    </chapter>
    <chapter xml:id="Service_Access_Endpoints-d1e753">
        <title>Service access endpoints</title>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">The Cloud Block Storage service is a
            regionalized service. The user of the service is responsible for appropriate
            replication, caching, and overall maintenance of Cloud Block Storage data across
            regional boundaries to other Cloud Block Storage servers.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You can find the available service
            access endpoints for Cloud Block Storage summarized in the table below.</para>
        <?rax-fo keep-with-next?>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <table rules="all">
                <caption>Cloud Block Storage regionalized service endpoints</caption>
                <thead>
                    <tr align="center">
                        <td colspan="2">Region</td>
                        <td colspan="5">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="2">Chicago (ORD)</td>
                        <td colspan="5"
                                ><code>https://ord.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">Dallas/Ft. Worth (DFW)</td>
                        <td colspan="5"
                                ><code>https://dfw.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                    <tr>
                        <td colspan="2">Northern Virginia (IAD)</td>
                        <td colspan="5"
                                ><code>https://iad.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">London (LON)</td>
                        <td colspan="5"
                                ><code>https://lon.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">Sydney (SYD)</td>
                        <td colspan="5"
                                ><code>https://syd.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                    <tr>
                        <td colspan="2">Hong Kong (HKG)</td>
                        <td colspan="5"
                                ><code>https://hkg.blockstorage.api.rackspacecloud.com/v1/</code><parameter>1234</parameter>/</td>
                    </tr>
                </tbody>
            </table>
        </para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Replace the sample account ID number,
                <parameter>1234</parameter>, with your actual account number returned as part of the
            authentication service response.</para>
        <para xmlns:wadl="http://wadl.dev.java.net/2009/02">You will find the actual account number
            after the final '/' in the <code>publicURL</code> field returned by the authentication
            response (<xref linkend="authResponse-d1e"/>.</para>
    </chapter>
    <chapter xml:id="Using_the_API_Directly">
        <title>Using the API directly by using cURL</title>
        <para>The main purpose of this guide is to get you up and running quickly with Cloud Block
            Storage. To help you accomplish this goal, this chapter contains simple examples for
            authentication and some basic Cloud Block Storage requests that you will commonly use.
            Example requests are provided in cURL, followed by the response. </para>
        <para>For more information about all Cloud Block Storage operations, see the <emphasis
                role="italic">Cloud Block Storage Developer Guide</emphasis>.</para>
        <section xml:id="Gen-Auth-Token">
            <title>Generating an authentication token</title>
            <para>Your first step must always be to generate an authentication token. You must then
                include the authentication token in each request in the <code>X-Auth-Token</code>
                header. </para>
            <para>For more details about authentication, see the <citetitle>Cloud Block Storage
                    Developer Guide</citetitle>.</para>
            <para>Remember to replace the placeholders in the following authentication request
                example with your information:<itemizedlist spacing="compact">
                    <listitem>
                        <para><emphasis role="bold">yourUserName</emphasis> &mdash;Your common
                            Rackspace Cloud user name, as supplied during registration.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">yourApiKey</emphasis> &mdash; Your API key. </para>
                    </listitem>
                </itemizedlist></para>
            <para>Notice that you authenticate by using the URL for the Cloud Identity service,
                    <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>, as shown in
                the following authentication request example. </para>
            <note>
                <para>For UK-based accounts, you might use
                        <code>'https://lon.identity.api.rackspacecloud.com/v2.0/tokens'</code>
                    instead.</para>
            </note>
            <para>The cURL request uses the <code>-d</code> switch to send the specified data in a
                    <command>POST</command> request to the HTTP server and the <code>-i</code>
                switch to send the HTTP response to terminal output.</para>
            <example>
                <title>cURL authentication request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {
          "username": "<emphasis role="bold">yourUserName</emphasis>",
          "apiKey": "<emphasis role="bold">yourApiKey</emphasis>"}
    }
}' \
-H 'Content-Type: application/json' \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python  -m  json.tool </screen>
            </example>
            <para>An HTTP status code of 200 (OK) in the response indicates that the authentication
                request completed successfully.</para>
            <para>In the authentication response, the authentication token <code>id</code> is
                returned with an <code>expires</code> attribute that specifies when the token
                expires. Tokens are valid for a finite duration, typically for 24 hours. Remember to
                supply your authentication token wherever you see the placeholder <emphasis
                    role="bold">yourAuthToken</emphasis> in the examples in this guide.</para>
            <para>The <code>publicURL</code> endpoints for Cloud Block Storage (for example <code
                    xmlns:wadl="http://wadl.dev.java.net/2009/02"
                    >https://dfw.blockstorage.api.rackspacecloud.com/v1/</code><parameter
                    xmlns:wadl="http://wadl.dev.java.net/2009/02">1234</parameter>/) are also
                returned in the authentication response. </para>
            <para>Your actual account number is after the final slash (/) in the
                    <code>publicURL</code> field, for example <code>1234</code> in the preceding
                endpoint. You must specify <emphasis role="italic">your</emphasis> account number in
                the Cloud Block Storage API request, wherever you see the placeholder <emphasis
                    role="bold">yourAccountID</emphasis> specified in the examples in this
                guide.</para>
            <example xml:id="authResponse-d1e">
                <title>Authenticate response with partial service catalog showing cloudBlockStorage:
                    JSON</title>
                <programlisting language="json"><xi:include href="../../src/docbkx/samples/auth-20-gettingStartedGuide.json" parse="text"/></programlisting>
            </example>
            <para>After authentication, you can use cURL to perform <command>POST</command>,
                    <command>GET</command>, <command>PUT</command>, and <command>DELETE</command>
                requests for the Cloud Block Storage API.</para>
        </section>
        <section xml:id="Creating_a_Storage_Container-d1e3026"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Creating a Block Storage volume</title>
            <para> Before uploading any data to Cloud Files, you must create a storage container.
                You do this with a &PUT; request. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-X</code> switch to specify the correct HTTP method and the
                    <code>-i</code> switch to send the HTTP response to terminal output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the container
                was successfully created.</para>
            <example>
                <title>cURL Create Storage Container</title>
                <programlisting>
curl -i -X PUT https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 
</programlisting>
                <programlisting>
HTTP/1.1 201 Created
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: txfaf60e1d2a844e5ca9998-0053569d54dfw1
Date: Tue, 22 Apr 2014 16:48:21 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="Uploading_a_Storage_Object-d1e3067"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Attaching a volume to a server</title>
            <para>After creating a container, you can upload a file to it. You do this with a &PUT;
                request. You must ensure that the object's <code>Content-Type</code> is set
                correctly so that the receiving server knows what kind of file it is. This is the
                mechanism by which a user's web browser knows how to display the file or launch a
                helper application to view the file.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The cURL request uses the
                    <code>-X</code> switch to specify the correct HTTP method and the
                    <code>-i</code> switch to send the HTTP response to terminal output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the object was
                successfully uploaded.</para>
            <example>
                <title>cURL Upload an Object</title>
                <programlisting>
curl -i -X PUT https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Content-Type: image/jpeg" \
-H "Content-Length: 0"
</programlisting>
                <programlisting>
HTTP/1.1 201 Created
Last-Modified: Tue, 22 Apr 2014 17:02:35 GMT
Content-Length: 0
Etag: d41d8cd98f00b204e9800998ecf8427e
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx4f2953d5969d4c40ada04-005356a0aadfw1
Date: Tue, 22 Apr 2014 17:02:34 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="updateObjectMetadata-d1e">
            <title>Updating (or Prepare your volume for use with a server) </title>
            <para>You can send a <command>POST</command> request to set or update custom metadata
                for existing objects. Metadata is set by using the header <code>X-Object-Meta-name:
                    value</code>, where <emphasis role="italic">name</emphasis> is the custom name
                for your metadata and <emphasis role="italic">value</emphasis> is the data value. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 202
                (Accepted) in the response indicates that the metadata for the object was
                successfully updated.</para>
            <example>
                <title>cURL Get Storage Space</title>
                <programlisting language="bash">
curl -i -X POST https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "X-Object-Meta-ImageType: png" \
-H "X-Object-Meta-ImageSize: 400 MB"
</programlisting>
                <programlisting>
HTTP/1.1 202 Accepted
Content-Length: 76
Content-Type: text/html; charset=UTF-8
X-Trans-Id: txffc66e0337ae4cd19e79c-005356a1abdfw1
Date: Tue, 22 Apr 2014 17:06:51 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="deleteContainer-d1e">
            <title>Listing existing Block Storage volumes</title>
            <para>You can send a <command>DELETE</command> request to the storage service to delete
                a container. The container must be empty before you can delete it. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 204
                (No Content) in the response indicates that the container was successfully
                deleted.</para>
            <example>
                <title>cURL Get Storage Space</title>
                <programlisting language="bash">
curl -i -X DELETE https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>"  
</programlisting>
                <programlisting>
HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx4b8836bcc20a457d9bbe4-005356a30fdfw1
Date: Tue, 22 Apr 2014 17:12:47 GMT     
</programlisting>
            </example>
        </section>
        <section xml:id="retrieveObject-d1e">
            <title>Detaching a volume from a server</title>
            <para>You can send a <command>GET</command> request to get the object content and
                metadata. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the object was successfully retrieved.</para>
            <example>
                <title>cURL Get Storage Space</title>
                <programlisting language="bash">
curl -i -X GET https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
Content-Length: 0
Accept-Ranges: bytes
X-Object-Meta-Imagetype: png
Last-Modified: Tue, 22 Apr 2014 17:06:52 GMT
X-Object-Meta-Imagesize: 400 MB
Etag: d41d8cd98f00b204e9800998ecf8427e
X-Timestamp: 1398186411.61064
Content-Type: image/jpeg
X-Trans-Id: txad3571ebcee24cabb387a-005356a229dfw1
Date: Tue, 22 Apr 2014 17:08:57 GMT 

[ ...object content...]
</programlisting>
            </example>
        </section>
        <section xml:id="deleteObject-d1e">
            <title>Deleting a volume</title>
            <para>You can send a <command>DELETE</command> request to the storage service to delete
                an object in a container. </para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 204
                (No Content) in the response indicates that the object was successfully
                deleted.</para>
            <para>The object is removed from the storage system, both the data and metadata. Object
                deletion is processed immediately at the time of the request. Any subsequent GET,
                HEAD, POST, PUT, or DELETE operations return a 404 (Not Found) error (unless object
                versioning is on and other versions exist. For more details about object versioning,
                see the <citetitle>Cloud Files Developer Guide</citetitle>.). </para>
            <example>
                <title>cURL Get Storage Space</title>
                <programlisting language="bash">
curl -i -X DELETE https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis>/<emphasis role="bold">yourObjectName</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 
</programlisting>
                <programlisting>
HTTP/1.1 204 No Content
Content-Length: 0
Content-Type: text/html; charset=UTF-8
X-Trans-Id: tx32fae72bccc94cb68d605-005356a2badfw1
Date: Tue, 22 Apr 2014 17:11:22 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="Show-Account-Details-d1e101">
            <title>Creating a snapshot</title>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">You can send a
                    <command>GET</command> request to show account details and lists containers.
                Using the <code>format</code> query parameter on the request causes the list to
                include details (<code>count</code>, <code>bytes</code>, and <code>name</code>)
                about each container. Without it, you would receive just a list of the container
                names.</para>
            <para>The HTTP request must include a header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para xmlns:m="http://www.w3.org/the key 1998/Math/MathML">An HTTP status code of 200
                (OK) in the response indicates that the account and container details were
                successfully retrieved.</para>
            <example>
                <title>cURL Show Account Details</title>
                <programlisting>
curl -i -X GET https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAccountID</emphasis>?format=json \
-H "X-Auth-Token: <emphasis role="bold" xmlns:m="http://www.w3.org/the key 1998/Math/MathML">yourAuthToken</emphasis>"  
</programlisting>
                <programlisting>
HTTP/1.1 200 OK
Content-Length: 111
X-Account-Object-Count: 573
X-Timestamp: 1369081921.78518
X-Account-Meta-Temp-Url-Key: ed6a04a9f70458575112811a9af5284e
X-Account-Meta-Subject: Whaling
X-Account-Bytes-Used: 14268918
X-Account-Container-Count: 2
Content-Type: application/json; charset=utf-8
Accept-Ranges: bytes
X-Trans-Id: tx6c802728f41b4804812ee-005356a3c8dfw1
Date: Tue, 22 Apr 2014 17:15:52 GMT

[{"count": 0, "bytes": 0, "name": "newcontainer"}, {"count": 573, "bytes": 14268918, "name": "wordpressfiles"}]
</programlisting>
            </example>
        </section>
        <section xml:id="Determining_Storage_Usage-d1e2976"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Listing snapshots</title>
            <para>You can send a <command>HEAD</command> request to the storage service to determine
                how much data you have stored in the system and the number of containers you are
                using. </para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 204 (No Content) in the response indicates that the storage
                data were successfully retrieved. The HTTP headers in the response indicate the
                number of containers in this storage account and the total bytes stored for the
                entire account.</para>
            <example>
                <title>cURL Get Storage Space</title>
                <programlisting language="bash">
curl -i -X HEAD https://storage101.ord1.clouddrive.com/v1/<emphasis role="bold">yourAccountID</emphasis> \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" 
</programlisting>
                <programlisting>
HTTP/1.1 204 No Content
Content-Length: 0
X-Account-Object-Count: 573
X-Timestamp: 1369081921.78518
X-Account-Meta-Temp-Url-Key: ed6a04a9f70458575112811a9af5284e
X-Account-Meta-Subject: Whaling
X-Account-Bytes-Used: 14268918
X-Account-Container-Count: 2
Content-Type: text/plain; charset=utf-8
Accept-Ranges: bytes
X-Trans-Id: tx0618e82d44394a6b8c5fb-005356a46fdfw1
Date: Tue, 22 Apr 2014 17:18:39 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="CDN-Enabling_the_Container-d1e3123"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Deleting snapshots</title>
            <para>After creating a container and storing a file in it, you can choose to make the
                file publicly readable. Because the data in Cloud Files is private, you share your
                files through the content delivery network (CDN). To CDN-enable a container, issue a
                &PUT; request with <code>X-CDN-Enabled: True</code> against the CDN management
                service. (Note that the service access endpoint URL specifies the CDN system.) The
                default time to live (TTL) value is 72 hours (259200 seconds), with a minimum of 15
                minutes (900 seconds) and a maximum of 1 year (31536000 seconds). The following
                request sets the TTL to 1 week (604800 seconds) with <code>X-TTL:
                604800</code>.</para>
            <para xmlns:m="http://www.w3.org/1998/Math/MathML">The HTTP request must include a
                header to specify the authentication token. </para>
            <para>The cURL request uses the <code>-X</code> switch to specify the correct HTTP
                method and the <code>-i</code> switch to send the HTTP response to terminal
                output.</para>
            <para>An HTTP status code of 201 (Created) in the response indicates that the container
                was successfully CDN-enabled. </para>
            <para>When the container is CDN-enabled, the service returns its public URI in the
                    <code>X-Cdn-Uri</code> header of the response, and returns the SSL URI in the
                    <code>X-Cdn-Ssl-Uri</code> header of the response. You can combine the public
                URI with the object name to access the file through the CDN, or you can use the SSL
                URI with the object name to access the file over a secure SSL connection through the
                CDN.</para>
            <example>
                <title>cURL CDN-Enable Container and Set TTL</title>
                <programlisting>
curl -i -X PUT https://<emphasis role="bold">cdn1.clouddrive.com</emphasis>/v1/<emphasis role="bold">yourAccountID</emphasis>/<emphasis role="bold">yourContainerName</emphasis> /
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "<emphasis role="bold">X-CDN-Enabled: True</emphasis>" \
-H "<emphasis role="bold">X-TTL: 604800</emphasis>"
</programlisting>
                <programlisting>
HTTP/1.1 201 Created
Content-Length: 0
<emphasis role="bold">X-Cdn-Ssl-Uri: https://c93f9b29cd3c6bd865ee-24695493c49b279502b280c6ecd262b5.ssl.cf6.rackcdn.com</emphasis>
X-Cdn-Ios-Uri: http://7a701469fe9980c577e9-24695493c49b279502b280c6ecd262b5.iosr.cf6.rackcdn.com
<emphasis role="bold">X-Cdn-Uri: http://98199d7b2503ac330f05-24695493c49b279502b280c6ecd262b5.r17.cf6.rackcdn.com</emphasis>
Content-Type: text/html; charset=UTF-8
X-Cdn-Streaming-Uri: http://ce3a54aaf724a75455d6-24695493c49b279502b280c6ecd262b5.r17.stream.cf6.rackcdn.com
X-Trans-Id: txc2b9b4ef77fd45f28c2d2-005356adfchkg1
Date: Tue, 22 Apr 2014 17:59:24 GMT
</programlisting>
            </example>
        </section>
        <section xml:id="Other_cURL_Commands-d1e3222"
            xmlns:m="http://www.w3.org/the key 1998/Math/MathML">
            <title>Other cURL Commands</title>
            <para>You can issue any of the REST methods defined for Cloud Block Storage with the
                cURL utility. </para>
            <para>Note that generally each time <code>curl</code> is invoked to perform an
                operation, a separate TCP/IP and SSL connection is created and thrown away. The
                language APIs, in contrast, are designed to re-use connections between operations
                and therefore provide much better performance. We recommend that you use one of the
                language APIs in your production applications and limit cURL to quick-and-easy
                testing and troubleshooting.</para>
        </section>
    </chapter>
    <chapter xml:id="Additional_Resources-d1e436">
        <title>Additional Resources</title>
        <para>For information about all Cloud Block Storage API operations, see the <citetitle>Cloud
                Block Storage Developer Guide</citetitle> at <link
                xlink:href="http://docs.rackspace.com/">http://docs.rackspace.com/</link>. All you
            need to get started with the Cloud Block Storage API is in this getting started guide
            and the developer guide. For additional information about Cloud Block Storage, see <link
                xlink:href="http://www.rackspace.com/knowledge_center/product-page/cloud-block-storage">the
                Knowledge Center</link>.</para>
        <para>The official support channels (phone, chat, email, forums, and knowledge base
            articles) for Cloud Block Storage are available through the Rackspace Cloud web site at <link
                xlink:href="http://www.rackspace.com/cloud/block-storage/"
                >http://www.rackspace.com/cloud/block-storage/</link>. </para>
        <para> The system status page at <link
                xlink:href="http://status.rackspacecloud.com/cloudblockstorage/"
                >http://status.rackspacecloud.com/cloudblockstorage/</link> can be reviewed if you believe
            the Cloud Block Storage system is not functioning to your expectations. This page is updated to
            reflect up-to-date information about the systemâ€™s current health and status. </para>
        <para>Interested users can also follow updates/announcements via twitter at <link
                xlink:href="http://www.twitter.com/rackspace"
                >http://www.twitter.com/rackspace</link>. </para>
        <para>Visit the <link
                xlink:href="http://feedback.rackspacecloud.com/forums/71021-product-feedback/"
                >Product Feedback Forum</link> and tell us what you think about Cloud Block
            Storage.</para>
        <para> Developers are also encouraged to join some of the members of the Cloud BlockStorage
            team at external.irc.rackspace.com on the #cbs channel. This is not an official Cloud
            Block Storage support channel but should rather be viewed as a community meeting place
            to share ideas and discuss Cloud Block Storage. </para>
        <para>This API uses standard HTTP 1.1 response codes as documented at <link
                xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                >www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</link>. </para>
    </chapter>
</book>
